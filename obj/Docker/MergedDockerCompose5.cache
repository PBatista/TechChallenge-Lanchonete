name: dockercompose15676443681506708962
services:
  api:
    build:
      context: C:\Users\peeeh\OneDrive\Documentos\FIAP\TECH_CHALLENGER\Projeto\Lanchonete
      dockerfile: API/Dockerfile
      args:
        BUILD_CONFIGURATION: Release
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: API
    container_name: API
    depends_on:
      mongo:
        condition: service_started
        required: true
    entrypoint:
      - tail
      - -f
      - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
    image: api
    labels:
      com.microsoft.visual-studio.project-name: API
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /.nuget/packages --additionalProbingPath /.nuget/fallbackpackages  "/app/API.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    ports:
      - mode: ingress
        target: 8080
        protocol: tcp
    tty: true
    volumes:
      - type: bind
        source: C:\Users\peeeh\vsdbg\vs2017u5
        target: /remote_debugger
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\peeeh\AppData\Roaming/ASP.NET/Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\peeeh\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\peeeh\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\peeeh\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\TokenService.Proxy\linux-x64\net6.0
        target: /TokenService.Proxy
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\HotReloadProxy\linux-x64\net8.0
        target: /HotReloadProxy
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\HotReload
        target: /HotReloadAgent
        read_only: true
        bind:
          create_host_path: true
  mongo:
    command:
      - mongod
      - --port
      - "27018"
      - --bind_ip_all
    container_name: mongodb-container
    environment:
      MONGO_INITDB_DATABASE: lanchonete
    image: mongo:latest
    networks:
      default: null
    ports:
      - mode: ingress
        target: 27018
        published: "27018"
        protocol: tcp
    volumes:
      - type: volume
        source: mongodb-data
        target: /data/db
        volume: {}
networks:
  default:
    name: dockercompose15676443681506708962_default
volumes:
  mongodb-data:
    name: dockercompose15676443681506708962_mongodb-data
    driver: local